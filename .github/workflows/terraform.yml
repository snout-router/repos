name: Terraform
on:
  push:
    branches:
    - '*'
  pull_request:
jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - name: Check formatting
      run: terraform fmt -check
    - name: Initialize
      run: terraform init
    - name: Validate
      run: terraform validate
    - name: Plan
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
      id: plan
      run: terraform plan -input=false -no-color
    - name: Publish Plan
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
      uses: actions/github-script@v5
      env:
        PLAN: ${{ steps.plan.outputs.stdout }}
      with:
        script: |
          const output = `
          **ðŸ“– Terraform planning succeded**

          Merge this pull request to apply the plan.

          <details><summary>Plan details</summary>

          \`\`\`
          ${process.env.PLAN}
          \`\`\`

          </details>`

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output,
          })
    - name: Apply
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve -input=false
